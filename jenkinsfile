properties([
    pipelineTriggers([
        githubPush() // or pollSCM('* * * * *') for periodic polling
    ])
])

pipeline {
    agent any
    tools {
	    jdk "OracleJDK8"
	    git "GIT"
	}

    stages{
        stage('Fetch code') {
          steps{
                git credentialsId: 'gitCred', branch: 'main', url:'https://github.com/Sunloid/CICD-Node-docker-k8s'
          }  
        }
   
        stage("Build image and push to dockerhub"){
            steps{
                script{
			        withDockerRegistry([credentialsId: 'dockerCred', url: 'https://index.docker.io/v1/']) {	
                        sh """
            		        docker build -t sunloid04/nodeapp:${env.BUILD_NUMBER} /NodeJS/                     
            		        docker tag  sunloid04/nodeapp:${env.BUILD_NUMBER} sunloid04/nodeapp:latest 
		                    docker push sunloid04/nodeapp:${env.BUILD_NUMBER}
			                docker push sunloid04/nodeapp:latest
                        """ 
		            }
                }
            }
        }

	    stage("Deploy to Kubernetes"){
            steps{
                 withCredentials([file(credentialsId: 'kuberCredfile', variable: 'KUBECONFIG')])  {
                    sh 'kubectl apply -f /Kubernetes/deployment.yml'
                    sh 'kubectl apply -f /Kubernetes/service.yml'
                }
            }
        }
    }
    
    post {
    always {
        slackSend (
            channel: '#your-channel',
            message: "Job: ${env.JOB_NAME} - Build #${env.BUILD_NUMBER} - ${currentBuild.currentResult}",
            color: (currentBuild.currentResult == 'SUCCESS') ? 'good' : 'danger'
        )
    }
}
}

